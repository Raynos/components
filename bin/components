#!/usr/bin/env node
const fs = require('fs')
const path = require('path')
const mkdirp = require('mkdirp')
const argv = require('minimist')(process.argv.slice(2))

const componentsDir = path.join(__dirname, '..', 'src')

function ensurePath (filename) {
  try {
    fs.statSync(path.dirname(filename))
  } catch (err) {
    mkdirp.sync(path.dirname(filename))
  }
}

const filename = argv._[0]

async function main () {
  ensurePath(filename)

  const output = []

  const dirs = [
    'router',
    'panel',
    'dialog',
    'tabs',
    'accordion',
    'windowed',
    'tooltip',
    'popover',
    'badge',
    'button',
    'charts',
    'checkbox',
    'icon',
    'input',
    'progress-bar',
    'profile-image',
    'range',
    'select',
    'sprite',
    'textarea',
    'toaster',
    'toaster-inline',
    'toggle'
  ]

  for (const dir of dirs) {
    try {
      fs.statSync(path.join(componentsDir, dir))
    } catch (err) {
      console.error(`No such component, ${dir}`)
      process.exit(1)
    }

    const src = path.join(componentsDir, dir, 'index.js')
    output.push(fs.readFileSync(src, 'utf8'))
  }

  const wrapper = `
    //
    // DO NOT EDIT! USE 'npm run build'!
    //
    module.exports = (Tonic, nonce) => {
      if (nonce) Tonic.nonce = nonce

      ${output.join('\n')}
    }
  `

  fs.writeFileSync(filename, wrapper)
}

main()
