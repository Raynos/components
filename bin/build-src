#!/usr/bin/env node
const fs = require('fs')
const path = require('path')
const stylus = require('stylus')

const toCSS = str => ({
  then (resolve) {
    stylus(str).render((err, css) => resolve({ err, css }))
  }
})

const componentsDir = path.join(__dirname, '..', 'src')
const dest = path.join(__dirname, '..', 'index.js')
const dirs = fs.readdirSync(componentsDir)

const re = /%style%/

async function main () {
  const output = []

  for (const dir of dirs) {
    const styl = path.join(componentsDir, dir, 'index.styl')
    const src = path.join(componentsDir, dir, 'index.js')
    const { err, css } = await toCSS(fs.readFileSync(styl, 'utf8'))

    if (err) {
      console.error(err.message)
      process.exit(1)
    }

    const js = fs.readFileSync(src, 'utf8')
    output.push(js.replace(re, () => css))
  }

  const js = `
    document.addEventListener('DOMContentLoaded', e => {
      ${output.join('\n')}
    })
  `
  fs.writeFileSync(dest, js)
}

main()
